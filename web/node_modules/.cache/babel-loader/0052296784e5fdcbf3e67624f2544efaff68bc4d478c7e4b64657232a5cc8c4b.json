{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documentos/clone_chatgpt/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { makeRequest } from './api/api';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\nimport { SideMenu } from './components/SideMenu/SideMenu';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState([\"\"]);\n  const [chatlog, setChatlog] = useState([{\n    user: 'gpt',\n    message: 'Olá!'\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 54\n    }, this));\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n    setInput('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caht-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input-textarea\",\n            rows: \"1\",\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"digite sua mensagem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EnbRx/HzBxlUGedwHjMS5h7sXE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","ChatMessage","SideMenu","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/dev/Documentos/clone_chatgpt/web/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { makeRequest } from './api/api';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\nimport { SideMenu } from './components/SideMenu/SideMenu';\nimport './styles/App.css';\nimport './styles/reset.css';\n\nfunction App() {\n  const [input, setInput] = useState([\"\"]);\n  const [chatlog, setChatlog] = useState([\n    {\n      user: 'gpt',\n      message: 'Olá!'\n    }\n  ]);\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    let response = await makeRequest({prompt: input})\n\n    response = response.data.split('\\n').map(line => <p>{line}</p>)\n\n    setChatlog([\n      ...chatlog, {\n        user: 'me',\n        message: `${input}`\n      },\n      { user: 'gpt',\n        message: response\n      }\n    ])\n\n    setInput('')\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu />\n       <section className='chatbox'>\n        <div  className='chat-log'>\n          {chatlog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n        </div>\n        <div className='caht-input-holder'>\n          <form onSubmit={handleSubmit}>\n            <input className='chat-input-textarea' rows='1' type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"digite sua mensagem\" />\n          </form>\n        </div>\n       </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,OAAO,kBAAkB;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CACrC;IACEY,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,eAAeC,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,GAAG,MAAMhB,WAAW,CAAC;MAACiB,MAAM,EAAEV;IAAK,CAAC,CAAC;IAEjDS,QAAQ,GAAGA,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,iBAAIjB,OAAA;MAAAkB,QAAA,EAAID;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC;IAE/DhB,UAAU,CAAC,CACT,GAAGD,OAAO,EAAE;MACVE,IAAI,EAAE,IAAI;MACVC,OAAO,EAAG,GAAEL,KAAM;IACpB,CAAC,EACD;MAAEI,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEI;IACX,CAAC,CACF,CAAC;IAEFR,QAAQ,CAAC,EAAE,CAAC;EACd;EAEA,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBlB,OAAA,CAACF,QAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXtB,OAAA;MAASuB,SAAS,EAAC,SAAS;MAAAL,QAAA,gBAC3BlB,OAAA;QAAMuB,SAAS,EAAC,UAAU;QAAAL,QAAA,EACvBb,OAAO,CAACW,GAAG,CAAC,CAACR,OAAO,EAAEgB,KAAK,kBAC1BxB,OAAA,CAACH,WAAW;UAAaW,OAAO,EAAEA;QAAQ,GAAxBgB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtB,OAAA;QAAKuB,SAAS,EAAC,mBAAmB;QAAAL,QAAA,eAChClB,OAAA;UAAMyB,QAAQ,EAAEhB,YAAa;UAAAS,QAAA,eAC3BlB,OAAA;YAAOuB,SAAS,EAAC,qBAAqB;YAACG,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,MAAM;YAACC,KAAK,EAAEzB,KAAM;YAAC0B,QAAQ,EAAGnB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;YAACG,WAAW,EAAC;UAAqB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACpB,EAAA,CA7CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}